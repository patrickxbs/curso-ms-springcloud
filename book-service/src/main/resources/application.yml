server:
  port: 8100

spring:
  application:
    name: book-service
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/book_service
    username: root
    password: 1234
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
    show-sql: false
    open-in-view: false
  management:
    tracing:
      sampling:
        probability: 1.0
  zipkin:
    base-url: http://http://localhost:9411

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

resilience4j:
  circuitbreaker:
    instances:
      bookCircuitBreaker:
          registerHealthIndicator: true
          slidingWindowSize: 5  # analisa as ultimas 5 requisições.
          failureRateThreshold: 50  # se 50% delas falharem, ele abre o circuito
          waitDurationInOpenState: 5s
          permittedNumberOfCallsInHalfOpenState: 2  # quando entra em meio-aberto, permite 2 chamadas de teste
    retry:
      instances:
        bookRetry:
          maxAttempts: 3  # vai tentar 3 vezes no total (a primeira tentativa + 2 novas)
          waitDuration: 2s  # espera 2 segundos entre as tentativas
    ratelimiter:
      instances:
        bookRateLimiter:  # limita, 5 chamadas a cada 10 segundos
          limitForPeriod: 5
          limitRefreshPeriod: 10s
    resilience4j.bulkhead:  # Impede que um serviço sobrecarregado afete outros
      instances:
        bookBulkhead:
          maxConcurrentCalls: 5
          maxWaitDuration: 60s

springdoc:
  api-docs:
    path: /book/v3/api-docs
  swagger-ui:
    url: /book/v3/api-docs
  override-server-url: true